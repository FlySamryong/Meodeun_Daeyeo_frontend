name: Deploy Flutter Web to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed # Pull Request가 닫힐 때 이벤트 발생
    branches:
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true || github.event_name == 'push' # 머지된 PR이나 푸시일 경우에만 실행
    runs-on: ubuntu-latest

    steps:
      # 1. 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Flutter 설치
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.24.5

      # 3. 의존성 설치
      - name: Install Dependencies
        run: flutter pub get

      # 4. 웹 빌드
      - name: Build Web
        run: flutter build web --web-renderer html

      # 5. AWS CLI 설치
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      # 6. S3로 업로드
      - name: Deploy to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
        run: |
          aws s3 sync build/web s3://$AWS_S3_BUCKET_NAME --delete

      # 7. CloudFront 캐시 무효화
      - name: Invalidate CloudFront Cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_CLOUDFRONT_DIST_ID: ${{ secrets.AWS_CLOUDFRONT_DIST_ID }}
        run: |
          aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DIST_ID --paths "/*"
